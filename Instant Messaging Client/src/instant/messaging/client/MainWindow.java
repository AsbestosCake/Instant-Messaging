/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package instant.messaging.client;

import java.awt.event.MouseEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPopupMenu;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;

/**
 *
 * @author Ste
 */
public class MainWindow extends javax.swing.JFrame {

    ClientLogic cl = new ClientLogic();
    //holds the list of users for a conversation
    ArrayList userTabList = new ArrayList<String>();

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_sendingField = new javax.swing.JTextField();
        cmd_send = new javax.swing.JButton();
        tabpanel_chathistory = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_chatHistory = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        lbx_users_online = new javax.swing.JList();
        txt_username = new javax.swing.JTextField();
        txt_password = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmd_connect = new javax.swing.JButton();
        cmd_disconnect = new javax.swing.JButton();
        cmd_regNewUser = new javax.swing.JButton();
        addUserButton = new javax.swing.JButton();
        chk_user = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Awesome Chatclient");
        setBounds(new java.awt.Rectangle(400, 200, 483, 300));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txt_sendingField.setText("Enter message here...");
        txt_sendingField.setToolTipText("");
        txt_sendingField.setEnabled(false);
        txt_sendingField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_sendingFieldFocusGained(evt);
            }
        });
        txt_sendingField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txt_sendingFieldPropertyChange(evt);
            }
        });

        cmd_send.setText("send!");
        cmd_send.setToolTipText("");
        cmd_send.setEnabled(false);
        cmd_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_sendActionPerformed(evt);
            }
        });

        tabpanel_chathistory.setEnabled(false);

        txt_chatHistory.setColumns(20);
        txt_chatHistory.setEditable(false);
        txt_chatHistory.setRows(5);
        txt_chatHistory.setEnabled(false);
        jScrollPane2.setViewportView(txt_chatHistory);

        tabpanel_chathistory.addTab("Chat", jScrollPane2);

        lbx_users_online.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "stefan", "stefan2", "stefan3", "User 1", "User 2", "User 3", "User 4", "User 5", "User 6", "User 7" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lbx_users_online.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lbx_users_online.setEnabled(false);
        lbx_users_online.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbx_users_onlineMouseClicked(evt);
            }
        });
        lbx_users_online.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lbx_users_onlineValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lbx_users_online);

        jLabel1.setText("Password:");

        jLabel2.setText("Username:");

        cmd_connect.setText("connect...");
        cmd_connect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmd_connectMouseClicked(evt);
            }
        });
        cmd_connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_connectActionPerformed(evt);
            }
        });

        cmd_disconnect.setText("disconnect...");
        cmd_disconnect.setToolTipText("");
        cmd_disconnect.setEnabled(false);
        cmd_disconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_disconnectActionPerformed(evt);
            }
        });

        cmd_regNewUser.setText("Register new user");
        cmd_regNewUser.setToolTipText("");
        cmd_regNewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_regNewUserActionPerformed(evt);
            }
        });

        addUserButton.setActionCommand("cmd_addUser");
        addUserButton.setEnabled(false);
        addUserButton.setLabel("+");
        addUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserButtonActionPerformed(evt);
            }
        });

        chk_user.setText("Show offline users");
        chk_user.setToolTipText("switch on / offline user");
        chk_user.setActionCommand("chk_offline_user");
        chk_user.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chk_userStateChanged(evt);
            }
        });
        chk_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_userActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(tabpanel_chathistory)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_sendingField, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_send)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(cmd_connect, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmd_disconnect, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                    .addComponent(txt_password, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_username, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(addUserButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmd_regNewUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(chk_user, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tabpanel_chathistory)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 19, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(2, 2, 2)
                        .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addGap(2, 2, 2)
                        .addComponent(txt_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmd_connect)
                            .addComponent(cmd_disconnect))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(4, 4, 4)
                .addComponent(chk_user)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_sendingField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmd_send)
                    .addComponent(cmd_regNewUser)
                    .addComponent(addUserButton))
                .addGap(4, 4, 4))
        );

        tabpanel_chathistory.getAccessibleContext().setAccessibleName("Chat");
        tabpanel_chathistory.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmd_regNewUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_regNewUserActionPerformed
        Registration reg = new Registration();
        reg.show();
    }//GEN-LAST:event_cmd_regNewUserActionPerformed

    private void cmd_connectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_connectActionPerformed


        boolean connectionSuccessfull = false;
        try {
            connectionSuccessfull = cl.listenSocket(txt_username.getText(), cl.SHA(txt_password.getText()));
        } catch (Exception ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
        if (connectionSuccessfull == true && txt_username.getText() != null && txt_password.getPassword() != null) {



            //write the current user in the tablist
            //userTabList.add(txt_username.getText());
            //userTabList.add("chat");
            //System.out.println(tabpanel_chathistory.getTitleAt(tabpanel_chathistory.getSelectedIndex()).toString());


            // userTabList.add("chat");
            //userTabList.add(tabpanel_chathistory.getTitleAt(tabpanel_chathistory.getSelectedIndex()));


            //enable elements needed for the chat
            cmd_disconnect.setEnabled(true);
            cmd_send.setEnabled(true);
            txt_sendingField.setEnabled(true);
            tabpanel_chathistory.setEnabled(true);
            lbx_users_online.setEnabled(true);
            txt_chatHistory.setEnabled(true);

            //disable not needed elements
            cmd_regNewUser.setEnabled(false);
            txt_username.setEnabled(false);
            txt_password.setEnabled(false);
            cmd_connect.setEnabled(false);


            try {
                System.out.println("in try, before readline");
                //handles initial sending from the server to client
                String history = "";
                history = cl.in.readUTF() + "\n";
                System.out.println("nach 1 readline");
                txt_chatHistory.setText(history);
                //txt_chatHistory.setText(history+cl.in.readUTF());
                System.out.println("nach 2 readline");

            } catch (IOException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }

            Thread clientlistener = new ClientThread(cl.socket, txt_chatHistory, tabpanel_chathistory, txt_username.getText());
            clientlistener.start();
        } else {
            System.out.println("Connection could not be established");
        }
        } catch (Exception ex) {
            System.err.println("Bad username or Password");
        }
    }//GEN-LAST:event_cmd_connectActionPerformed

    private void cmd_connectMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmd_connectMouseClicked
    }//GEN-LAST:event_cmd_connectMouseClicked
    //fired when send is hit
    private void cmd_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_sendActionPerformed


        String tabtitle = tabpanel_chathistory.getTitleAt(tabpanel_chathistory.getSelectedIndex()).toString();
        System.out.println("current tab title: " + tabtitle);
        if (userTabList.contains("Chat") == false) {
            userTabList.add(tabtitle);
            
        }
        //checks if sending field is empty
        if (!"".equals(txt_sendingField.getText())) {
            try {
                //write message to outputstream
                System.out.println(userTabList + txt_sendingField.getText());
                cl.out.writeUTF(userTabList + txt_sendingField.getText());
                cl.out.flush();
                System.out.println("message for: " + userTabList + " content: " + txt_sendingField.getText());
                
                
                JTabbedPane panel = tabpanel_chathistory;
                int i = panel.getSelectedIndex();
                System.out.println(i);
                System.out.println("selected component: "+panel.getComponentAt(i).toString());
                

                
                if(i !=0){
                    JTextArea currentTabHistory = (JTextArea) panel.getComponentAt(i);
                    //fill chathistory
                    String oldHistory = currentTabHistory.getText();
                    String newHistory = oldHistory + "\n" + txt_username.getText() +": "+txt_sendingField.getText();
                    currentTabHistory.setText(newHistory);
                }
                else{
                    String oldhistory = txt_chatHistory.getText();
                    oldhistory = oldhistory + "\n" + txt_username.getText() +": "+txt_sendingField.getText();
                    txt_chatHistory.setText(oldhistory);
                
                }
                txt_sendingField.setText("");
                    
            } catch (IOException ex) {
                Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        userTabList.removeAll(userTabList);
        System.out.println("tablist gelöscht");
    }//GEN-LAST:event_cmd_sendActionPerformed

    private void cmd_disconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_disconnectActionPerformed
        try {
            cl.out.writeUTF(txt_username+":/logoffuser");
            cl.socket.close();
            //enable needed components
            cmd_regNewUser.setEnabled(true);
            txt_username.setEnabled(true);
            txt_password.setEnabled(true);
            cmd_connect.setEnabled(true);

            //disable elements not needed for the chat
            cmd_disconnect.setEnabled(false);
            cmd_send.setEnabled(false);
            txt_sendingField.setEnabled(false);
            tabpanel_chathistory.setEnabled(false);
            lbx_users_online.setEnabled(false);
            txt_chatHistory.setEnabled(false);

            txt_sendingField.setText("Enter message here...");

            System.out.println("Disconnected from server! Reason: user disconnect");
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmd_disconnectActionPerformed

    private void lbx_users_onlineValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lbx_users_onlineValueChanged
        addUserButton.setEnabled(true);
    }//GEN-LAST:event_lbx_users_onlineValueChanged

    private void txt_sendingFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txt_sendingFieldPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_sendingFieldPropertyChange

    private void lbx_users_onlineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbx_users_onlineMouseClicked

        int doubleclickcounter = evt.getClickCount();
        //detects double clicks, makes sure that the right click is not catched
        if (doubleclickcounter == 2 && evt.getButton() != MouseEvent.BUTTON3) {

            //create array list for message destination


            System.out.println("doubleclick");

            //checks if the current tab is the right tab for the selection of the online user list
            if (lbx_users_online.getModel().getElementAt(lbx_users_online.getSelectedIndex()).toString().equals(tabpanel_chathistory.getComponentAt(tabpanel_chathistory.getSelectedIndex()).toString())) {
                System.out.println("message for this tab");
            } else {
                System.out.println("message for other tab...");
                JTextArea newChatTab = new JTextArea();
                newChatTab.setEditable(false);
                //adds a tab to the chathistory panel
                tabpanel_chathistory.addTab(lbx_users_online.getSelectedValue().toString(), newChatTab);
                //sets the selected index to the newest tab
                tabpanel_chathistory.setSelectedIndex(tabpanel_chathistory.getSelectedIndex() + 1);

            }


        }

        if (evt.getButton() == MouseEvent.BUTTON3) {
            System.out.println("Right Click");
            JPopupMenu rightClickMenu = new JPopupMenu();
            rightClickMenu.add("add to conversation");
            rightClickMenu.add("send file...");
            rightClickMenu.show(lbx_users_online, evt.getX(), evt.getY());
            //here a mouselistener has to be added
        }


    }//GEN-LAST:event_lbx_users_onlineMouseClicked

    private void addUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserButtonActionPerformed


        //userTabList.removeAll(userTabList);
        //stores old tab-title
        String olduser = tabpanel_chathistory.getTitleAt(tabpanel_chathistory.getSelectedIndex());
        String newuser = (String) lbx_users_online.getModel().getElementAt(lbx_users_online.getSelectedIndex());

        if (olduser.contains(newuser) == false) {
            //sets new title
            tabpanel_chathistory.setTitleAt(tabpanel_chathistory.getSelectedIndex(), olduser + "," + newuser);
            //adds a new user to the TabList array to know where message belongs
            //userTabList.add(lbx_users_online.getModel().getElementAt(lbx_users_online.getSelectedIndex()).toString());
            //sorting the userTabList in ascending order
            Collections.sort(userTabList);
        }
        System.out.println(userTabList);
    }//GEN-LAST:event_addUserButtonActionPerformed

    private void chk_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_userActionPerformed
    }//GEN-LAST:event_chk_userActionPerformed

    private void chk_userStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chk_userStateChanged
        //request offline users
        //if (chk_user.isSelected() == true) {
        //    cl.out.print("/getofflineUser");
        //}
        //if (chk_user.isSelected() == false) {
        //    cl.out.println("/getonlineUser");
        //}
    }//GEN-LAST:event_chk_userStateChanged

    private void txt_sendingFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_sendingFieldFocusGained
        txt_sendingField.setText("");
    }//GEN-LAST:event_txt_sendingFieldFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addUserButton;
    private javax.swing.JCheckBox chk_user;
    private javax.swing.JButton cmd_connect;
    private javax.swing.JButton cmd_disconnect;
    private javax.swing.JButton cmd_regNewUser;
    private javax.swing.JButton cmd_send;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList lbx_users_online;
    private javax.swing.JTabbedPane tabpanel_chathistory;
    private javax.swing.JTextArea txt_chatHistory;
    private javax.swing.JPasswordField txt_password;
    private javax.swing.JTextField txt_sendingField;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables
}
